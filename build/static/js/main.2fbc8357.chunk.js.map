{"version":3,"sources":["components/AnimateProgressBar.js","components/CircleProgressBar.js","App.js","index.js"],"names":["AnimateProgressBar","props","useState","value","setValue","useEffect","setTimeout","values","length","children","CircleProgress","refProgress","useRef","posProgress","setPosProgress","posScroll","setPosScroll","window","addEventListener","e","showProgress","current","offsetTop","innerHeight","pageYOffset","className","ref","style","marginTop","fakeData","map","item","index","percentage","number","text","name","App","CircleProgressBar","render","document","getElementById"],"mappings":"2LAYeA,EAVY,SAACC,GACxB,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOA,OANAC,qBAAU,WACNC,YAAW,WACPF,GAAUD,EAAQ,GAAKF,EAAMM,OAAOC,UACrC,KACJ,IAEIP,EAAMQ,SAASR,EAAMM,OAAOJ,K,4BCiCxBO,EAjCQ,WACnB,IAAMC,EAAcC,mBACpB,EAAsCV,qBAAtC,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAkCZ,qBAAlC,mBAAOa,EAAP,KAAkBC,EAAlB,KAWA,OATAX,qBAAU,WACNY,OAAOC,iBAAiB,UAAU,SAACC,GAAD,OAAOC,OACzC,IAAMA,EAAe,WACjBN,EAAeH,EAAYU,QAAQC,UAAYL,OAAOM,aACtDP,EAAaC,OAAOO,YAAc,KAEtCJ,MACD,IAGC,qCACI,gDACA,qBAAKK,UAAU,qBAAqBC,IAAKf,EAAagB,MAAO,CAAEC,UAAW,SAA1E,SACKC,EAASC,KAAI,SAACC,EAAMC,GAAP,OACV,sBAAiBP,UAAU,eAA3B,UACI,cAAC,EAAD,CAAoBlB,OAAQ,CAAC,EAAGwB,GAAhC,SACK,SAACE,GACE,OAAO,cAAC,IAAD,CAAqB9B,MAAOY,GAAaF,EAAcoB,EAAWC,OAAS,GAAIC,KAAMpB,GAAaF,EAAcoB,EAAWC,OAAS,IAAM,QAGzJ,+BAAOH,EAAKK,SANNJ,YCnBfK,MARf,WACI,OACI,qBAAKZ,UAAU,MAAf,SACI,cAACa,EAAD,OCFZC,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.2fbc8357.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst AnimateProgressBar = (props) => {\r\n    const [value, setValue] = useState(0);\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            setValue((value + 1) % props.values.length);\r\n        }, 1);\r\n    }, []);\r\n\r\n    return props.children(props.values[value]);\r\n};\r\nexport default AnimateProgressBar;\r\n","import { useEffect, useRef, useState } from 'react';\r\n\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport AnimateProgressBar from './AnimateProgressBar';\r\n\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nimport './../styles/circleProgressBar.scss';\r\n\r\nimport fakeData from './../data.json';\r\n\r\nconst CircleProgress = () => {\r\n    const refProgress = useRef();\r\n    const [posProgress, setPosProgress] = useState();\r\n    const [posScroll, setPosScroll] = useState();\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('scroll', (e) => showProgress());\r\n        const showProgress = () => {\r\n            setPosProgress(refProgress.current.offsetTop - window.innerHeight);\r\n            setPosScroll(window.pageYOffset - 50);\r\n        };\r\n        showProgress();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <h1>Scroll Down :)</h1>\r\n            <div className=\"container-progress\" ref={refProgress} style={{ marginTop: '100vh' }}>\r\n                {fakeData.map((item, index) => (\r\n                    <div key={index} className=\"itemProgress\">\r\n                        <AnimateProgressBar values={[0, item]}>\r\n                            {(percentage) => {\r\n                                return <CircularProgressbar value={posScroll >= posProgress ? percentage.number : ''} text={posScroll >= posProgress ? percentage.number + '%' : ''} />;\r\n                            }}\r\n                        </AnimateProgressBar>\r\n                        <span>{item.name}</span>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CircleProgress;\r\n","import CircleProgressBar from './components/CircleProgressBar';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <CircleProgressBar />\n        </div>\n    );\n}\n\nexport default App;\n","import { render } from 'react-dom';\nimport App from './App';\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}